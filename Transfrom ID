## Download the annotation package
# "hugene10sttranscriptcluster" is found in the NCBI, and remember to add ".db" 
library(hugene10sttranscriptcluster.db)
ls(hugene10sttranscriptcluster.db)
ids = toTable(hugene10sttranscriptclusterSYMBOL)
view(ids)
# count the number of genes with different probes
table(sort(table(ids$symbol)))

## Change ID
# review whether the rownames of exprSet exist in the ids$probe_id, if there is no True, the ids might be wrong
rownames(exprSet)%in% ids$probe_id
table(rownames(exprSet)%in% ids$probe_id) 
# filter the exprSet, keeping probes which have corrosponding genes in ids
n_exprSet=exprSet[(rownames(exprSet)%in% ids$probe_id),]
# beacuse there are some probes corrosponding to the same genes, we filter the exprSet matrix 
  and keep the probes whith the max mean expression level.
# "n_exprSet,ids$symbol" : group the n_exprSet by ids$symbol
# "function(x) rownames(x)[which.max(rowMeans(x))]" : find the probe with the max mean expression levels
tmp = by(n_exprSet,ids$symbol,  
         function(x) 
           rownames(x)[which.max(rowMeans(x))] )
probes = as.character(tmp)
# filter exprSet, keep the rows which exist in the probes
exprSet=exprSet[rownames(exprSet) %in% probes ,]
# change ID
rownames(exprSet)=ids[match(rownames(exprSet),ids$probe_id),2]
